import pandas as pd
import seaborn as sns

df = pd.read_csv('Admission_Predict.csv')

df.columns

df.shape

df.head()

from sklearn.preprocessing import Binarizer
bi = Binarizer(threshold = 0.75)
df['Chance of Admit '] = bi.fit_transform(df[['Chance of Admit ']])

df.head()

x = df.drop('Chance of Admit ', axis = 1)
y = df['Chance of Admit ']

x

y = y.astype('int')

sns.countplot(x = y);

y.value_counts()

# Cross Validation
from sklearn.model_selection import train_test_split
x_train,x_test,y_train,y_test = train_test_split(
    x,y,random_state=0,test_size=0.25)

x_train.shape

x_test.shape

x_test

#Import the class
from sklearn.tree import DecisionTreeClassifier

classifier = DecisionTreeClassifier(random_state=0)

classifier.fit(x_train,y_train)

y_pred = classifier.predict(x_test)

result = pd.DataFrame({
    'actual':y_test,
    'predicted':y_pred
})

from sklearn.metrics import ConfusionMatrixDisplay, accuracy_score
from sklearn.metrics import classification_report

ConfusionMatrixDisplay.from_predictions(y_test,y_pred)

accuracy_score(y_test, y_pred)

print(classification_report(y_test, y_pred))

new = [[136,314,109,4,3.5,4.0,8.77,1]]
classifier.predict(new)[0]

from sklearn.tree import plot_tree

import matplotlib.pyplot as plt

plt.figure(figsize=(12,12))
plot_tree(classifier, fontsize=8, filled=True, rounded=True,
         feature_names=x.columns, class_names = ['NA','AD']);
