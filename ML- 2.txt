import numpy as np # linear algebra 
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
import seaborn as sns

df = pd.read_csv("temperatures.csv")

df.head()

df.tail()

df.shape

import matplotlib.pyplot as plt

# x = data.iloc[:,1:6]
# y = data.iloc[:,-1:]
x = df['YEAR']
y = df['ANNUAL']

plt.figure(figsize = (16 , 9))
plt.title('Temperature Plot of India')
plt.xlabel('Year')
plt.ylabel('Annual Average Temperature')
plt.scatter(x , y)

plt.plot(x,y,'o')

x.shape

x = x.values

x = x.reshape(117,1)

x.shape


from sklearn.linear_model import LinearRegression


regressor = LinearRegression()

regressor.fit(x ,y)

regressor.coef_

regressor.intercept_

regressor.predict([[2024]])

regressor.predict([[2074]])

predicted = regressor.predict(x)

predicted

#Mean Absolute Error 
abs(y - predicted)

import numpy as np

np.mean(abs(y- predicted))

from sklearn.metrics import mean_absolute_error
mean_absolute_error(y , predicted)

np.mean((y - predicted) ** 2)

from sklearn.metrics import mean_squared_error
mean_squared_error(y, predicted)

#r 2 Error
from sklearn.metrics import r2_score
r2_score(y , predicted)

regressor.score(x , y) # to find linearity

plt.title('Temperature Plot Of INDIA')
plt.xlabel('Year')
plt.ylabel('Annual Average Temperature')
plt.scatter(x , y , label = 'actual', color='r')
plt.plot(x, predicted, label = 'predicted', color= 'g')
plt.legend()

sns.regplot(x='YEAR' ,y='ANNUAL' , data = df)




